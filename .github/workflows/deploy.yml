name: Deploy

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Clean pnpm cache
        run: pnpm store prune

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Ensure Wrangler is available
        run: pnpm exec wrangler --version

      - name: Debug Wrangler Version
        run: pnpm exec wrangler -h

      - name: Update Wrangler to latest version
        run: pnpm add -D wrangler@latest  # 强制更新 wrangler 到最新版本

      - name: Check Wrangler Version after update
        run: pnpm exec wrangler --version  # 确保更新后的版本

      - name: Run deploy script
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          PROJECT_NAME: ${{ secrets.PROJECT_NAME }}
          DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
          DATABASE_ID: ${{ secrets.DATABASE_ID }}
          KV_NAMESPACE_NAME: ${{ secrets.KV_NAMESPACE_NAME }}
          KV_NAMESPACE_ID: ${{ secrets.KV_NAMESPACE_ID }}
          CUSTOM_DOMAIN: ${{ secrets.CUSTOM_DOMAIN }}
          AUTH_GITHUB_ID: ${{ secrets.AUTH_GITHUB_ID }}
          AUTH_GITHUB_SECRET: ${{ secrets.AUTH_GITHUB_SECRET }}
          AUTH_SECRET: ${{ secrets.AUTH_SECRET }}
        run: pnpm exec tsx scripts/deploy/index.ts

      - name: Post deployment cleanup
        run: |
          rm -f .env*.*
          rm -f wrangler*.json
